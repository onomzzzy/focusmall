import { OnInit, AfterViewInit, AfterContentInit, OnDestroy, ElementRef, EventEmitter, QueryList, TemplateRef } from '@angular/core';
import { Message } from 'primeng/api';
import { MessageService } from 'primeng/api';
import { Subscription } from 'rxjs';
import { AnimationEvent } from '@angular/animations';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/api';
export declare class ToastItem implements AfterViewInit, OnDestroy {
    message: Message;
    index: number;
    template: TemplateRef<any>;
    showTransitionOptions: string;
    hideTransitionOptions: string;
    onClose: EventEmitter<any>;
    containerViewChild: ElementRef;
    timeout: any;
    ngAfterViewInit(): void;
    initTimeout(): void;
    clearTimeout(): void;
    onMouseEnter(): void;
    onMouseLeave(): void;
    onCloseIconClick(event: any): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ToastItem>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ToastItem, "p-toastItem", never, {
    "message": "message";
    "index": "index";
    "template": "template";
    "showTransitionOptions": "showTransitionOptions";
    "hideTransitionOptions": "hideTransitionOptions";
}, {
    "onClose": "onClose";
}, never>;
}
export declare class Toast implements OnInit, AfterContentInit, OnDestroy {
    messageService: MessageService;
    key: string;
    autoZIndex: boolean;
    baseZIndex: number;
    style: any;
    styleClass: string;
    position: string;
    modal: boolean;
    showTransitionOptions: string;
    hideTransitionOptions: string;
    onClose: EventEmitter<any>;
    containerViewChild: ElementRef;
    templates: QueryList<any>;
    messageSubscription: Subscription;
    clearSubscription: Subscription;
    messages: Message[];
    template: TemplateRef<any>;
    mask: HTMLDivElement;
    constructor(messageService: MessageService);
    ngOnInit(): void;
    ngAfterContentInit(): void;
    onMessageClose(event: any): void;
    enableModality(): void;
    disableModality(): void;
    onAnimationStart(event: AnimationEvent): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Toast>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Toast, "p-toast", never, {
    "autoZIndex": "autoZIndex";
    "baseZIndex": "baseZIndex";
    "position": "position";
    "showTransitionOptions": "showTransitionOptions";
    "hideTransitionOptions": "hideTransitionOptions";
    "key": "key";
    "style": "style";
    "styleClass": "styleClass";
    "modal": "modal";
}, {
    "onClose": "onClose";
}, ["templates"]>;
}
export declare class ToastModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ToastModule, [typeof Toast, typeof ToastItem], [typeof ɵngcc1.CommonModule], [typeof Toast, typeof ɵngcc2.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ToastModule>;
}

//# sourceMappingURL=toast.d.ts.map