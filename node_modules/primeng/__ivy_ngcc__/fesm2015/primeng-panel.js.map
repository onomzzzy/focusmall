{"version":3,"sources":["C:/Users/O N O M E/Desktop/Angular Project/MALL/node_modules/primeng/fesm2015/primeng-panel.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eA4DE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2CA6CyC,AAgDjC;;;;;EAER;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAOc","file":"primeng-panel.js","sourcesContent":["import { EventEmitter, ElementRef, Input, Output, ContentChild, Component, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Footer, SharedModule } from 'primeng/api';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nlet idx = 0;\nlet Panel = class Panel {\n    constructor(el) {\n        this.el = el;\n        this.collapsed = false;\n        this.expandIcon = 'pi pi-plus';\n        this.collapseIcon = 'pi pi-minus';\n        this.showHeader = true;\n        this.toggler = \"icon\";\n        this.collapsedChange = new EventEmitter();\n        this.onBeforeToggle = new EventEmitter();\n        this.onAfterToggle = new EventEmitter();\n        this.transitionOptions = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\n        this.id = `ui-panel-${idx++}`;\n    }\n    onHeaderClick(event) {\n        if (this.toggler === 'header') {\n            this.toggle(event);\n        }\n    }\n    onIconClick(event) {\n        if (this.toggler === 'icon') {\n            this.toggle(event);\n        }\n    }\n    toggle(event) {\n        if (this.animating) {\n            return false;\n        }\n        this.animating = true;\n        this.onBeforeToggle.emit({ originalEvent: event, collapsed: this.collapsed });\n        if (this.toggleable) {\n            if (this.collapsed)\n                this.expand(event);\n            else\n                this.collapse(event);\n        }\n        event.preventDefault();\n    }\n    expand(event) {\n        this.collapsed = false;\n        this.collapsedChange.emit(this.collapsed);\n    }\n    collapse(event) {\n        this.collapsed = true;\n        this.collapsedChange.emit(this.collapsed);\n    }\n    getBlockableElement() {\n        return this.el.nativeElement.children[0];\n    }\n    onToggleDone(event) {\n        this.animating = false;\n        this.onAfterToggle.emit({ originalEvent: event, collapsed: this.collapsed });\n    }\n};\nPanel.ctorParameters = () => [\n    { type: ElementRef }\n];\n__decorate([\n    Input()\n], Panel.prototype, \"toggleable\", void 0);\n__decorate([\n    Input()\n], Panel.prototype, \"header\", void 0);\n__decorate([\n    Input()\n], Panel.prototype, \"collapsed\", void 0);\n__decorate([\n    Input()\n], Panel.prototype, \"style\", void 0);\n__decorate([\n    Input()\n], Panel.prototype, \"styleClass\", void 0);\n__decorate([\n    Input()\n], Panel.prototype, \"expandIcon\", void 0);\n__decorate([\n    Input()\n], Panel.prototype, \"collapseIcon\", void 0);\n__decorate([\n    Input()\n], Panel.prototype, \"showHeader\", void 0);\n__decorate([\n    Input()\n], Panel.prototype, \"toggler\", void 0);\n__decorate([\n    Output()\n], Panel.prototype, \"collapsedChange\", void 0);\n__decorate([\n    Output()\n], Panel.prototype, \"onBeforeToggle\", void 0);\n__decorate([\n    Output()\n], Panel.prototype, \"onAfterToggle\", void 0);\n__decorate([\n    Input()\n], Panel.prototype, \"transitionOptions\", void 0);\n__decorate([\n    ContentChild(Footer, { static: true })\n], Panel.prototype, \"footerFacet\", void 0);\nPanel = __decorate([\n    Component({\n        selector: 'p-panel',\n        template: `\n        <div [attr.id]=\"id\" [ngClass]=\"'ui-panel ui-widget ui-widget-content ui-corner-all'\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div [ngClass]=\"{'ui-panel-titlebar ui-widget-header ui-helper-clearfix ui-corner-all': true, 'ui-panel-titlebar-clickable': (toggleable && toggler === 'header')}\" \n                *ngIf=\"showHeader\" (click)=\"onHeaderClick($event)\">\n                <span class=\"ui-panel-title\" *ngIf=\"header\" [attr.id]=\"id + '_header'\">{{header}}</span>\n                <ng-content select=\"p-header\"></ng-content>\n                <a *ngIf=\"toggleable\" [attr.id]=\"id + '-label'\" class=\"ui-panel-titlebar-icon ui-panel-titlebar-toggler ui-corner-all ui-state-default\" tabindex=\"0\"\n                    (click)=\"onIconClick($event)\" (keydown.enter)=\"onIconClick($event)\" [attr.aria-controls]=\"id + '-content'\" role=\"tab\" [attr.aria-expanded]=\"!collapsed\">\n                    <span [class]=\"collapsed ? expandIcon : collapseIcon\"></span>\n                </a>\n            </div>\n            <div [attr.id]=\"id + '-content'\" class=\"ui-panel-content-wrapper\" [@panelContent]=\"collapsed ? {value: 'hidden', params: {transitionParams: animating ? transitionOptions : '0ms', height: '0', opacity:'0'}} : {value: 'visible', params: {transitionParams: animating ? transitionOptions : '0ms', height: '*', opacity: '1'}}\" (@panelContent.done)=\"onToggleDone($event)\"\n                [ngClass]=\"{'ui-panel-content-wrapper-overflown': collapsed||animating}\"\n                role=\"region\" [attr.aria-hidden]=\"collapsed\" [attr.aria-labelledby]=\"id + '-label'\">\n                <div class=\"ui-panel-content ui-widget-content\">\n                    <ng-content></ng-content>\n                </div>\n                \n                <div class=\"ui-panel-footer ui-widget-content\" *ngIf=\"footerFacet\">\n                    <ng-content select=\"p-footer\"></ng-content>\n                </div>\n            </div>\n        </div>\n    `,\n        animations: [\n            trigger('panelContent', [\n                state('hidden', style({\n                    height: '0',\n                    opacity: 0\n                })),\n                state('void', style({\n                    height: '{{height}}',\n                    opacity: '{{opacity}}'\n                }), { params: { height: '0', opacity: '0' } }),\n                state('visible', style({\n                    height: '*',\n                    opacity: 1\n                })),\n                transition('visible <=> hidden', animate('{{transitionParams}}')),\n                transition('void => hidden', animate('{{transitionParams}}')),\n                transition('void => visible', animate('{{transitionParams}}'))\n            ])\n        ]\n    })\n], Panel);\nlet PanelModule = class PanelModule {\n};\nPanelModule = __decorate([\n    NgModule({\n        imports: [CommonModule],\n        exports: [Panel, SharedModule],\n        declarations: [Panel]\n    })\n], PanelModule);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Panel, PanelModule };\n"]}