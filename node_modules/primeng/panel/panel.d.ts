import { EventEmitter, ElementRef } from '@angular/core';
import { BlockableUI } from 'primeng/api';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/api';
export declare class Panel implements BlockableUI {
    private el;
    toggleable: boolean;
    header: string;
    collapsed: boolean;
    style: any;
    styleClass: string;
    expandIcon: string;
    collapseIcon: string;
    showHeader: boolean;
    toggler: string;
    collapsedChange: EventEmitter<any>;
    onBeforeToggle: EventEmitter<any>;
    onAfterToggle: EventEmitter<any>;
    transitionOptions: string;
    footerFacet: any;
    animating: boolean;
    id: string;
    constructor(el: ElementRef);
    onHeaderClick(event: Event): void;
    onIconClick(event: Event): void;
    toggle(event: Event): boolean;
    expand(event: any): void;
    collapse(event: any): void;
    getBlockableElement(): HTMLElement;
    onToggleDone(event: Event): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Panel>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Panel, "p-panel", never, {
    "collapsed": "collapsed";
    "expandIcon": "expandIcon";
    "collapseIcon": "collapseIcon";
    "showHeader": "showHeader";
    "toggler": "toggler";
    "transitionOptions": "transitionOptions";
    "toggleable": "toggleable";
    "header": "header";
    "style": "style";
    "styleClass": "styleClass";
}, {
    "collapsedChange": "collapsedChange";
    "onBeforeToggle": "onBeforeToggle";
    "onAfterToggle": "onAfterToggle";
}, ["footerFacet"]>;
}
export declare class PanelModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<PanelModule, [typeof Panel], [typeof ɵngcc1.CommonModule], [typeof Panel, typeof ɵngcc2.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<PanelModule>;
}

//# sourceMappingURL=panel.d.ts.map